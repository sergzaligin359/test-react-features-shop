// import * as R from 'ramda';
import { indexBy } from 'utils';
import {
    FETCH_PHONES_SUCCESS,
    FETCH_PHONES_FAILURE
} from 'redux/actionTypes';

const initialState = {
    phones: {},
    error: false
};

// native
export default (state=initialState, { type, payload, error }) => {
    switch (type) {
        case FETCH_PHONES_SUCCESS:
            const newValues = indexBy('id', payload);
            // console.log('newValues', newValues);
            return {
                ...state,
                phones: newValues
            }
        case FETCH_PHONES_FAILURE:
            return{
                ...state,
                error: error
            }
        default:
            return state;
    }
}

// Ramda { 11: {id: 1, name: 'vasia'}}
// export default (state=initialState, { type, payload, error }) => {
//     switch (type) {

//         case FETCH_PHONES_SUCCESS:
//             const newValues = R.indexBy(R.prop('id'), payload);
//             console.log('new values R', newValues);
//             return R.merge(state, newValues);
//         case FETCH_PHONES_FAILURE:
//             return{
//                 ...state,
//                 error: error
//             }
//         default:
//             return state;
//     }
// }

// lodash
// export default (state=initialState, { type, payload, error }) => {
//     switch (type) {

//         case FETCH_PHONES_SUCCESS:
//             return{
//                 ...state,
//                 phones: payload
//             }
//         case FETCH_PHONES_FAILURE:
//             return{
//                 ...state,
//                 error: error
//             }
//         default:
//             return state;
//     }
    
// }